# Process this file with autoconf to produce a configure script.
AC_INIT()

ITK_OBJ=`pwd`
AC_SUBST(ITK_OBJ)

#
# check for some programs we use
#
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_PATH_XTRA

# get byte swapping info
AC_C_BIGENDIAN
if test $ac_cv_c_bigendian = yes; then
  BIGENDIAN="-DITK_WORDS_BIGENDIAN"
fi
AC_SUBST(BIGENDIAN)

# some stuff Tcl uses
#
AC_CHECK_HEADER(limits.h, HAVE_LIMITS_H=-DHAVE_LIMITS_H,HAVE_LIMITS_H="")
AC_SUBST(HAVE_LIMITS_H)
AC_HAVE_HEADERS(unistd.h, HAVE_UNISTD_H=-DHAVE_UNISTD_H,HAVE_UNISTD_H="")
AC_SUBST(HAVE_UNISTD_H)

# Step 1: set the variable "system" to hold the name and version number
# for the system.  This can usually be done via the "uname" command, but
# there are a few systems, like Next, where this doesn't work.

AC_MSG_CHECKING([system version (for dynamic loading)])
if test -f /usr/lib/NextStep/software_version; then
  system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	AC_MSG_RESULT([unknown (can't find uname command)])
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	AC_MSG_RESULT($system)
    fi
fi


#
# use shared libs
#
AC_ARG_WITH(shared,
         [  --with-shared               create shared libraries],
         [itk_shared_ok=$withval], [itk_shared_ok=no])

INSTALL_TARGET="install"

USE_TOOLKIT_FLAGS=""


AC_SUBST(INSTALL_TARGET)

BUILD_TOOLKITS=""
CLEAN_TOOLKITS=""
DEPEND_TOOLKITS=""
INSTALL_TOOLKITS=""

# --with-kits goes here
AC_SUBST(BUILD_TOOLKITS)
AC_SUBST(INSTALL_TOOLKITS)
AC_SUBST(DEPEND_TOOLKITS)
AC_SUBST(CLEAN_TOOLKITS)


# option for handling BSD style makefile includes
#
AC_ARG_WITH(bsdmake,
         [  --with-bsdmake            uses bsd style makefile includes],
	 if test "$withval" = yes; then
         MAKEINCLUDE=".include"
         MAKEQUOTE='"'
         fi,
         MAKEINCLUDE="include"
         MAKEQUOTE='')
AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)



# the following is an excerpt from the tcl7.5b2 configure.in
#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	dynamic loading and shared libraries:
#
#	SHLIB_CFLAGS -	Flags to pass to cc when compiling the components
#			of a shared library (may request position-independent
#			code, among other things).
#	SHLIB_LD_LIBS -	Dependent libraries for the linker to scan when
#			creating shared libraries.  This symbol typically
#			goes at the end of the "ld" commands that build
#			shared libraries. The value of the symbol if
#			"${LIBS}" if all of the dependent libraries should
#			be specified when creating a shared library.  If
#			dependent libraries should not be specified (as on
#			SunOS 4.x, where they cause the link to fail, or in
#			general if Tcl and Tk aren't themselves shared
#			libraries), then this symbol has an empty string
#			as its value.
#	SHLIB_SUFFIX -	Suffix to use for the name of the shared library.  An
#			empty string means we don't know how to use shared
#			libraries on this platform.
#	ITK_SHLIB_BUILD_FLAGS -
#                       Flags to use when building a shared library.	
#	ITK_SHLIB_LINK_FLAGS -	
#                       Flags to pass to the compiler when linking object
#			files into an executable application binary such
#			as tclsh.
#--------------------------------------------------------------------


# Step 2: check for existence of -ldl library.  This is needed because
# Linux can use either -ldl or -ldld for dynamic loading.

AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)

# Step 4: set configuration options based on system name and version.

fullSrcDir=`cd $srcdir; pwd`
AC_SUBST(fullSrcDir)
case $system in
    AIX-*)
	# AIX: can't link shared library extensions unless Tcl and Tk are
	# also shared libraries.
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX="..o"
	DL_LIBS=""
        AC_CHECK_LIB(ld,printf, DL_LIBS="-lld")
	ITK_SHLIB_LINK_FLAGS=""
	;;
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
	SHLIB_CFLAGS="+z"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".sl"
	DL_LIBS="-ldld"
	ITK_SHLIB_BUILD_FLAGS='+Z -Wl,-E -Wl,-b'
	ITK_SHLIB_LINK_FLAGS='-Wl,+s -Wl,+b,${LIB_RUNTIME_DIR}'
        if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
  	  ITK_SHLIB_BUILD_FLAGS='-shared -Wl,-E -Wl,-b'
	  ITK_SHLIB_LINK_FLAGS='-Wl,+s -Wl,+b,${LIB_RUNTIME_DIR}'
        fi
	;;
    IRIX-5.*)
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	ITK_SHLIB_BUILD_FLAGS="-shared -rdata_shared"
	;;
    IRIX-6* | IRIX64-6* | IRIX-64-6*)
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	ITK_SHLIB_BUILD_FLAGS="-shared -rdata_shared"
	;;
    Linux*)
	SHLIB_CFLAGS="-fPIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	ITK_SHLIB_BUILD_FLAGS="-shared"
	if test "$have_dl" = yes; then
	    DL_LIBS="-ldl"
	    ITK_SHLIB_LINK_FLAGS="-rdynamic"
	else
	    AC_CHECK_HEADER(dld.h, [
		DL_LIBS="-ldld"
		ITK_SHLIB_LINK_FLAGS=""])
	fi
	;;
    MP-RAS-02*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	ITK_SHLIB_LINK_FLAGS=""
	;;
    MP-RAS-*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	ITK_SHLIB_LINK_FLAGS="-Wl,-Bexport"
	;;
    NetBSD-*|FreeBSD-*)
	# Not available on all versions:  check for include file.
	if test -f /usr/include/dlfcn.h; then
	    SHLIB_CFLAGS="-fpic"
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX=".so"
	    DL_LIBS=""
	    ITK_SHLIB_LINK_FLAGS="-shared"
	else
	    SHLIB_CFLAGS=""
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX="..o"
	    DL_LIBS=""
	    ITK_SHLIB_LINK_FLAGS=""
	fi
	;;
    NEXTSTEP-*)
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	ITK_SHLIB_LINK_FLAGS=""
	;;
    OSF1-1.[012])
	# OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1
	SHLIB_CFLAGS=""
	# Hack: make package name same as library name
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	ITK_SHLIB_LINK_FLAGS=""
	;;
    OSF1-1.*)
	# OSF/1 1.3 from OSF using ELF, and derivatives, including AD2
	SHLIB_CFLAGS="-fpic"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	ITK_SHLIB_LINK_FLAGS=""
	;;
    OSF1-V*)
        # Digital OSF/1
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	ITK_SHLIB_BUILD_FLAGS='-shared -Wl,-expect_unresolved,"*"'
	ITK_SHLIB_LINK_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    RISCos-*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX="..o"
	DL_LIBS=""
	ITK_SHLIB_LINK_FLAGS="-Wl,-D,08000000"
	;;
    SCO_SV-3.2*)
        # Note, dlopen is available only on SCO 3.2.5 and greater.  However,
        # this test works, since "uname -s" was non-standard in 3.2.4 and
        # below.
	SHLIB_CFLAGS="-Kpic -belf"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	ITK_SHLIB_LINK_FLAGS="-belf -Wl,-Bexport"
	;;
     SINIX*5.4*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	ITK_SHLIB_LINK_FLAGS=""
	;;
    SunOS-4*)
	SHLIB_CFLAGS="-PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	ITK_SHLIB_BUILD_FLAGS='-shared -Wl,-r -nostdlib'
	ITK_SHLIB_LINK_FLAGS='-Wl,-L${LIB_RUNTIME_DIR}'
	;;
    SunOS-5*)
	SHLIB_CFLAGS="-KPIC"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	ITK_SHLIB_BUILD_FLAGS='-G'
	ITK_SHLIB_LINK_FLAGS='-R ${LIB_RUNTIME_DIR}'
        if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
	  ITK_SHLIB_BUILD_FLAGS='-Wl,-G'
	  ITK_SHLIB_LINK_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'
        fi
	;;
    ULTRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD_LIBS=""
	DL_LIBS=""
	ITK_SHLIB_LINK_FLAGS="-Wl,-D,08000000"
	;;
    UNIX_SV*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	ITK_SHLIB_LINK_FLAGS="-Wl,-Bexport"
	;;
esac
export SHLIB_SUFFIX

# If we're running gcc, then change the C flags for compiling shared
# libraries to the right flags for gcc, instead of those for the
# standard manufacturer compiler.
if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
  SHLIB_CFLAGS="-fPIC"
fi

if test "$itk_shared_ok" = "yes"; then
    ITK_SHLIB_CFLAGS="${SHLIB_CFLAGS}"
    ITK_LD_SEARCH_FLAGS="${LD_SEARCH_FLAGS}"
    ITK_TCL_SHLIB_TARGET="itktcl"
    RANLIB=":"
    TOOLKIT_DEPENDS=""
    ITK_LIB_EXT="${SHLIB_SUFFIX}"
else
    ITK_LIB_EXT=".a"
    SHLIB_LD_LIBS=""
    ITK_SHLIB_CFLAGS=""
    ITK_LD_SEARCH_FLAGS=""
    TOOLKIT_DEPENDS="\${ITK_OBJ}/Code/libITKCommon.a"
fi
export ITK_LIB_EXT

AC_SUBST(ITK_TCL_SHLIB_TARGET)


AC_SUBST(TOOLKIT_DEPENDS)
AC_SUBST(USE_TOOLKIT_FLAGS)

AC_SUBST(ITK_SHLIB_LINK_FLAGS)
AC_SUBST(ITK_SHLIB_BUILD_FLAGS)

AC_SUBST(ITK_SHLIB_CFLAGS)
AC_SUBST(ITK_LIB_EXT)
AC_SUBST(DL_LIBS)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_SUFFIX)


#--------------------------------------------------------------------
#	Include sys/select.h if it exists and if it supplies things
#	that appear to be useful and aren't already in sys/types.h.
#	This appears to be true only on the RS/6000 under AIX.  Some
#	systems like OSF/1 have a sys/select.h that's of no use, and
#	other systems like SCO UNIX have a sys/select.h that's
#	pernicious.  If "fd_set" isn't defined anywhere then set a
#	special flag.
#--------------------------------------------------------------------

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
	[fd_set readMask, writeMask;], tk_ok=yes, tk_ok=no)
if test $tk_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, tk_ok=yes)
    if test $tk_ok = yes; then
	AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($tk_ok)
if test $tk_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi


##########################
##			##
## Check thread support ##
##			##
##########################
THREAD_LIBS=""
THREAD_FLAGS=""
use_sproc=no
AC_CHECK_HEADERS(sys/prctl.h, [use_sproc=yes])
if test "$use_sproc" = "yes"; then
case $system in
    Linux* | IRIX64-6.5 | IRIX-6.5)
	use_sproc=no
	;;
    IRIX*)
	THREAD_FLAGS="-DITK_USE_SPROC"
	;;
esac
fi

use_pthreads=no
AC_CHECK_HEADERS(pthread.h, [use_pthreads=yes])
if test "$use_pthreads" = "yes"; then
  if test "$use_sproc" = "no"; then
    AC_CHECK_LIB(pthreads, pthread_create, THREAD_LIBS="-lpthreads")
    AC_CHECK_LIB(pthread, pthread_create, THREAD_LIBS="-lpthread")
# Work around Solaris 5.6 and 5.7 bug:
    if test "`uname -s -r`" = "SunOS 5.6"; then
      AC_CHECK_LIB(thread, thr_create, THREAD_LIBS="$THREAD_LIBS -lthread")
    fi
    if test "`uname -s -r`" = "SunOS 5.7"; then
      AC_CHECK_LIB(thread, thr_create, THREAD_LIBS="$THREAD_LIBS -lthread")
    fi
	THREAD_FLAGS="-DITK_USE_PTHREADS"
  fi
fi

# on an HP with pthread we need to use -lcma
# on dec alphas we have had problems as well
if test "$use_pthreads" = "yes"; then
case $system in
    HP-UX-*.10.*)
	THREAD_LIBS="-lcma"
	THREAD_FLAGS="-DITK_USE_PTHREADS -DITK_HP_PTHREADS"
	;;
    OSF1-V*)
        THREAD_FLAGS=""
        THREAD_LIBS=""
        ;;
    FreeBSD*)
	THREAD_FLAGS=""
	THREAD_LIBS=""
	;;
esac
fi

AC_SUBST(THREAD_FLAGS)
AC_SUBST(THREAD_LIBS)

# on hp use -Aa for ansi
if test $ac_cv_prog_gxx = no; then
case $system in
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
        echo $ac_n "checking whether ${CC} accepts -Aa""... $ac_c" 1>&6
        echo 'void f(){}' > conftest.c
        if test -z "`${CC} -Aa -c conftest.cc 2>&1`"; then
          echo "$ac_t""yes" 1>&6
          ANSI_CFLAGS="-Aa"
        else
          echo "$ac_t""no" 1>&6
        fi
        rm -f conftest*
	;;
esac
fi
AC_SUBST(ANSI_CFLAGS)

# if we are not running g++ then we might need some other flags
# to get the templates compiled correctly
ITK_TEMPLATE_FLAGS=""
if test $ac_cv_prog_gxx = no; then
    echo $ac_n "checking whether ${CXX} accepts -ptused -no_prelink""... $ac_c" 1>&6
  echo 'void f(){}' > conftest.cc
  if test -z "`${CXX} -ptused -no_prelink -c conftest.cc 2>&1`"; then
    echo "$ac_t""yes" 1>&6
    ITK_TEMPLATE_FLAGS="-ptused -no_prelink"
  else
    echo "$ac_t""no" 1>&6
  fi
  rm -f conftest*
  echo $ac_n "checking whether ${CXX} accepts -instances=static""... $ac_c" 1>&6
  echo 'void f(){}' > conftest.cc
  if test -z "`${CXX} -instances=static -c conftest.cc 2>&1`"; then
    echo "$ac_t""yes" 1>&6
    ITK_TEMPLATE_FLAGS="-instances=static"
  else
    echo "$ac_t""no" 1>&6
  fi
  rm -f conftest*
  echo $ac_n "checking whether ${CXX} accepts -pto""... $ac_c" 1>&6
  echo 'void f(){}' > conftest.cc
  if test -z "`${CXX} -pto -c conftest.cc 2>&1`"; then
    echo "$ac_t""yes" 1>&6
    ITK_TEMPLATE_FLAGS="-pto"
  else
    echo "$ac_t""no" 1>&6
  fi
  rm -f conftest*
  echo $ac_n "checking whether ${CXX} accepts -LANG:std""... $ac_c" 1>&6
  echo 'void f(){}' > conftest.cc
  if test -z "`${CXX} -LANG:std -c conftest.cc 2>&1`"; then
    EXTRA_GCC_FLAG=${EXTRA_GCC_FLAG}" -LANG:std"
  else
   echo "$ac_t""no" 1>&6
  fi
fi
AC_SUBST(ITK_TEMPLATE_FLAGS)

if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
  SHLIB_CFLAGS="-fPIC"
fi

if test -f $ITK_OBJ/local.make.in; then
   echo "create local.make"
   rm -f local.make
   cp $ITK_OBJ/local.make.in local.make
else
   echo "no $ITK_OBJ/local.make.in creating an empty one"
   rm -f local.make
   touch local.make
fi

AC_SUBST(EXTRA_GCC_FLAG)

AC_CONFIG_SUBDIRS(Code/Insight3DParty/vxl/vcl)

# For remote builds you have to configure at least one
# file in each directory, so configure can make the directories.
# So, for some directories with no Makefiles, a mkdir file is created
# from dummy.in
# Also, for each directory with a Makefile, an initial targets.make
# must be created in that directory for non-gmake make programs that
# abort when they can not find an included makefile part
AC_OUTPUT(
Makefile
Code/Makefile
Code/targets.make:Code/config/dummy.in 
Code/tools/Makefile
Code/config/system.make 
Code/config/Insight.make 
Code/config/InsightRules.make 
Code/config/build.rules
Code/Insight3DParty/mkdir:Code/config/dummy.in
Code/Insight3DParty/vxl/Makefile
Code/Insight3DParty/vxl/targets.make:Code/config/dummy.in 
Code/Common/Makefile
Code/Common/targets.make:Code/config/dummy.in 
Testing/mkdir:Code/config/dummy.in
Testing/Code/mkdir:Code/config/dummy.in
Testing/Code/Insight3DParty/mkdir:Code/config/dummy.in
Testing/Code/Insight3DParty/vxl/mkdir:Code/config/dummy.in
Testing/Code/Insight3DParty/vxl/vnl/mkdir:Code/config/dummy.in
Testing/Code/Insight3DParty/vxl/vnl/tests/Makefile
Testing/Code/Common/Makefile
Testing/Code/Common/targets.make:Code/config/dummy.in 
)

# force a rebuild of rulesgen which will rebuild targets.make
# this has to be done because configure generates empty targets.make files
# for makes other than gnu.
rm -f Code/tools/rulesgen
