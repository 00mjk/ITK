# =========================================================================
# 
#   Program:   Insight Segmentation & Registration Toolkit
#   Module:    Submit.tcl.in
#   Language:  Tcl
#   Date:      $Date$
#   Version:   $Revision$
# 

# Copyright (c) 2001 Insight Consortium
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

#  * Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.

#  * Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

#  * The name of the Insight Consortium, nor the names of any consortium members,
#    nor of any contributors, may be used to endorse or promote products derived
#    from this software without specific prior written permission.

#   * Modified source versions must be plainly marked as such, and must not be
#     misrepresented as being the original software.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This script submits testing results to the centralized server.
# It uses ftp protocols for transfering the testing results. It then uses
# a http geturl protocol to notify the server of that testing results 
# have been dropped into the drop box.
#
# If your testing machine is behind a firewall, set two environment variables
# HTTP_PROXY and HTTP_PROXY_PORT and the http trigger will run through 
# your filewall.
#

source Testing/Utilities/Utility.conf
source Testing/Utilities/Utility.tcl
source [file join $SourceDirectory Testing Utilities ftp.tcl]

package require http

set Model Experimental
if { $argc == 1 } \
{
  set Model [lindex $argv 0]
}

set dropSite           "public.kitware.com"
set dropLocation       "/incoming"
set dropSiteUser       "anonymous"
set dropSitePassword   "insight-tester@somewhere.com"
set triggerSite        "http://public.kitware.com/cgi-bin/Submit-Insight-TestingResults.pl"

set HTMLDir [file join Testing HTML]
set TempDir [file join Testing Temporary]

set SiteDir [file join $HTMLDir TestingResults Sites $Site]
set BuildNameDir [file join $SiteDir $BuildName]

# Find the build name directory
set BuildStampDir [GetLastBuildDirectory $Model]
if { $BuildStampDir == "" } \
{
  puts "\tCould not find any builds in the $BuildNameDir: $Result"
  exit 1
}

set BuildStamp [file tail $BuildStampDir]
set XMLDir [file join $BuildStampDir XML]
set FTPprefix [file join $Site $BuildName $BuildStamp XML]


# Ftp the results to public.kitware.com
set conn [ftp::Open $dropSite $dropSiteUser $dropSitePassword]
ftp::Type $conn ascii
ftp::Cd $conn $dropLocation

puts "\tBeginning Submission"
set XMLFiles [glob $XMLDir/*.xml]
foreach XMLFile $XMLFiles {
  # post each xml file using ftp
  #
  set RemoteFilename [file join $FTPprefix [file tail $XMLFile]]
  set RemoteFilename [file split $RemoteFilename]
  set RemoteFilename [join $RemoteFilename "___"]
  ftp::Put $conn $XMLFile $RemoteFilename
  puts "\tPut [file tail $XMLFile]"
  
  # convert the filename to it can be used in a url
  #
  regsub -all "\\+" $RemoteFilename "%2B" urlFilename

  # configure for going through a firewall
  #
  if {[info exist env(HTTP_PROXY)] && [info exists env(HTTP_PROXY_PORT)]} {
    ::http::config -proxyhost $env(HTTP_PROXY) -proxyport $env(HTTP_PROXY_PORT)
  } else {
    puts ""
    puts "\tIf your computer is behind a firewall, make sure that you have set"
    puts "\tthe environment variables HTTP_PROXY and HTTP_PROXY_PORT."
    puts ""
  }

  # tell the server the results have been posted
  #
  set token [::http::geturl $triggerSite?xmlfile=$urlFilename ]
  puts "\tTriggered [::http::data $token]"
}
 
ftp::Close $conn
exit